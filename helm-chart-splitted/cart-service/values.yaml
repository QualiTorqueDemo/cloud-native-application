# Default values for onlineboutique.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

images:
  repository: gcr.io/google-samples/microservices-demo
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

serviceAccounts:
  # Specifies whether service accounts should be created.
  create: false
  # Annotations to add to the service accounts.
  annotations: {}
  # Annotations to add only for the cartservice app. This allows to follow the least privilege principle where only cartservice needs to connect to external database for example via Workload Identity.
  annotationsOnlyForCartservice: false

seccompProfile:
  enable: false
  type: RuntimeDefault

networkPolicies:
  # Specifies if the NetworkPolicies are created or not. If true, one fine granular NetworkPolicy per app is created.
  create: false

sidecars:
  # Specifies if the Sidecars are created or not. If true, one fine granular Sidecar per app is created.
  create: false

authorizationPolicies:
  # Specifies if the AuthorizationPolicies are created or not. If true, one fine granular AuthorizationPolicy per app is created.
  create: false

cartService:
  create: true
  name: cartservice
  resources:
    requests:
      cpu: 200m
      memory: 64Mi
    limits:
      cpu: 300m
      memory: 128Mi

connectionString: "eg-test-redis-test-nrpy63jyn0ek.2fifor.ng.0001.use1.cache.amazonaws.com:6379"

cartDatabase:
  # Specifies the type of the cartservice's database, could be either redis or spanner.
  type: redis
  inClusterRedis:
    create: false
    name: redis-cart
    # Uses the public redis image from Docker Hub, otherwise will use the images.repository.
    publicRepository: true
  externalRedisTlsOrigination:
    enable: false
    name: exernal-redis-tls-origination
    endpointAddress: ""
    endpointPort: ""
    certificate: ""
